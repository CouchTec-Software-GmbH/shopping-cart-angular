pid /var/run/nginx.pid;
events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  client_max_body_size 40M;

  # Upstream for the Rust backend server (port 8000)
  upstream backend {
    server 127.0.0.1:8000;
    keepalive 32;
  }

  # ADDED: Upstream for the Angular SSR Node.js server (port 4000)
  upstream frontend_ssr {
    server 127.0.0.1:4000;
    keepalive 32;
  }

  server {
    listen 8080;

    # MODIFIED: Route initial requests to the Angular SSR Server
    # This handles page loads and client-side routing.
    location / {
      proxy_pass http://frontend_ssr;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # MODIFIED: Serve static files directly
    # Intercept requests for assets and serve them from the 'browser' directory.
    # This prevents the Node.js server from handling static files.
    # The regex matches common static file extensions.
    location ~* \.(?:ico|css|js|gif|jpe?g|png|svg|webp)$ {
      root /usr/src/app/dist/browser;
      expires 1y; # Aggressively cache static assets
      add_header Cache-Control "public";
    }

    # UNCHANGED: Proxy API requests to the Rust backend
    location /api/ {
      proxy_pass http://backend/api/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
    }
  }
}
